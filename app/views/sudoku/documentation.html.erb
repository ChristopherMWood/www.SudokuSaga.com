
<div class="api-description-container">
  <center><h2>Basic Game Rules</h2></center>
  <h3>End Conditions</h3>
  <p>
    The main iteration will keep running unless one of two things happen.
    First is that the board becomes fully filled out. When this happends,
    the loop stops running and the board is checked for correctness.
    </br></br>
    The second way it ends is if no cells get set for 150 iterations. This is considered
    a timeout.
  </p>
  <h3>Game Score</h3>
  <p>
    The api functions documented below cost points to use and will add to your overall
    score on each call. Your goal should be to get the lowest score possible. Due to
    the nature of the puzzle and the frequency of calls, don't be surprised if your score
    ends up being quite large.
  </p>
</div>

<div class="api-description-container">
  <h2>getGrid(row, column);</h2>
  <h3>Cost: 1</h3>
  <p>
    Gets a 2D array of the grid at the given row, column location in the sudoku board.
    A grid represents 1 of the 9 cell sections on the board. The top left is location (0, 0)
    and the bottom right is (2, 2) <b>Row andd Column may be valid integers between 0 and 2</b>.
  </p>
</div>

<div class="api-description-container">
  <h2>getRow(row);</h2>
  <h3>Cost: 1</h3>
  <p>
    Gets an array of length 9 filled out with the contents of the specified row from left to right.
    Each value may be either null if it is an empty cell or an integer if it is not.
    <b>Row must be a valid integer between 0 and 8.</b>
  </p>
</div>

<div class="api-description-container">
  <h2>getColumn(column);</h2>
  <h3>Cost: 1</h3>
  <p>
    Gets an array of length 9 filled out with the contents of the specified column from top to bottom.
    Each value may be either null if it is an empty cell or an integer if it is not.
    <b>Column must be a valid integer between 0 and 8.</b>
  </p>
</div>

<div class="api-description-container">
  <h2>getCell(row, column);</h2>
  <h3>Cost: 1</h3>
  <p>
    Get the value for the cell at the given row, column location in the sudoku board.
    <b>Row and Column may be valid integers between 0 and 8.</b>
  </p>
</div>

<div class="api-description-container">
  <h2>clearCell(row, column);</h2>
  <h3>Cost: 5 (+5 if already empty)</h3>
  <p>
    Clears the specified cell of a value and sets it to null.
    <b>Row and Column must be a valid integer between 0 and 8.</b>
  </p>
</div>

<div class="api-description-container">
  <h2>setCell(row, column, value);</h2>
  <h3>Cost: -5 (+15 if cell already has value)</h3>
  <p>
    Sets the value of the specified cell. The first time you set the value in an empty cell,
    you get 5 points taken off your score. Any additional time you set the value for a cell
    that already is set, you will be penalized.
    <b>Row, Column must be a valid integer between 0 and 8 and value must be a valid integer
    between 1 and 9</b>
  </p>
</div>

<div class="api-description-container">
  <h2>isValueInRow(row, value);</h2>
  <h3>Cost: 1</h3>
  <p>
    Returns true if value exists in the row specified. False otherwise.
    <b>Row must be a valid integer between 0 and 8 and value must be a valid integer
      between 1 and 9</b>
  </p>
</div>

<div class="api-description-container">
  <h2>isValueInColumn(column, value);</h2>
  <h3>Cost: 1</h3>
  <p>
    Returns true if value exists in the column specified. False otherwise.
    <b>Comnlu must be a valid integer between 0 and 8 and value must be a valid integer
      between 1 and 9</b>
  </p>
</div>

<div class="api-description-container">
  <h2>isValueInGrid(row, column, value);</h2>
  <h3>Cost: 1</h3>
  <p>
    Returns true if value exists in the grid specified. False otherwise.
    <b>Row and Column must be a valid integer between 0 and 8 and value must be a valid integer
      between 1 and 9</b>
  </p>
</div>

<style>
  .api-description-container {
    margin: 0 auto;
    width: 500px;
    background-color: whitesmoke;
    padding: 10px;
    border-radius: 4px;
    margin-top: 25px;
  }
</style>